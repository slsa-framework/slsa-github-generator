name: unit tests

on:
  push:
    branches: [main, "*"]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [main]
  workflow_dispatch:

permissions: read-all

jobs:
  pre-submit:
    # NOTE: this name is used as the status check name and by protected
    # branches for required status checks. It should have a unique name among
    # other pre-submits.
    name: unit tests
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Checkout
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3.0.2
      - name: setup-go
        uses: actions/setup-go@268d8c0ca0432bb2cf416faae41297df9d262d7f # tag=v3.3.0
        with:
          go-version: "1.18"

      - name: detect-workflow tests
        run: |
          set -euo pipefail

          cd .github/actions/detect-workflow

          # Download dependencies.
          go mod vendor

          # Test.
          go test -mod=vendor -v ./...

      - name: API tests
        run: |
          # Tests unit tests, including in generic and go builders
          set -euo pipefail

          # Download dependencies.
          go mod vendor

          # Test.
          go test -mod=vendor -v ./...

      - name: Builder builds
        run: |
          set -euo pipefail

          # Build Go builder.
          go build -mod=vendor ./internal/builders/go

          # Build Generic builder.
          go build -mod=vendor ./internal/builders/generic

  check-verifier:
    name: verify slsa-verifier is latest
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Checkout
        uses: actions/checkout@7884fcad6b5d53d10323aee724dc68d8b9096a2e # tag=v2.4.2
        with:
          path: generator

      - name: Checkout
        uses: actions/checkout@7884fcad6b5d53d10323aee724dc68d8b9096a2e # tag=v2.4.2
        with:
          path: verifier
          repository: slsa-framework/slsa-verifier

      - name: Check verifier references
        shell: bash
        run: |
          set -euo pipefail

          # The first sha in SHA256SUM.md is the latest verifier release sha
          expected_sha=$(cat verifier/SHA256SUM.md | grep -m 1  -w -o -e '[0-9a-f]\{64\}')
          echo "$expected_sha"

          # The first vX.Y.Z in SHA256SUM.md is the latest verifier release version
          expected_version=$(cat verifier/SHA256SUM.md | grep -e 'v[0-9].[0-9].[0-9]' -o -m 1 -w | head -1)
          echo "$expected_version"

          # Check for expected verifier releases in the builders
          cd generator
          error=0
          grep -r -e 'VERIFIER_RELEASE_BINARY_SHA256: [0-9a-f]\{64\}' --include=*.yml |
          while read -r  line ; do
            sha=$(echo $line | grep -o -e '[0-9a-f]\{64\}')
            file=$(echo $line | awk '{print $1;}')
            if [ "$sha" != "$expected_sha" ]; then
              echo "SHA out of date in file $file expected $expected_sha"
              error=1
            fi
          done

          grep -r -e 'VERIFIER_RELEASE: v[0-9].[0-9].[0-9]' --include=*.yml |
          while read -r  line ; do
            version=$(echo $line | grep -o -e 'v[0-9].[0-9].[0-9]')
            file=$(echo $line | awk '{print $1;}')
            if [ "$version" != "$expected_version" ]; then
              echo "Verifier version out of date in file $file expected $expected_version"
              error=1
            fi
          done

          if [ $error -ne 0 ]; then
            exit 1
          fi
