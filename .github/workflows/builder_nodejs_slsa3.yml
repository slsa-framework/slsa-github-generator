name: SLSA Node.js builder

permissions: {}

on:
  workflow_call:
    inputs:
      always-auth:
        description: "Set always-auth in npmrc."
        required: false
        type: boolean
        default: false

      directory:
        description: "Sub-directory where package.json is located. Must be under the workspace."
        required: false
        type: string
        default: "."

      node-version:
        description: "Version Spec of the version to use. Examples: 12.x, 10.15.1, >=10.15.0."
        required: false
        type: string

      node-version-file:
        description: "File containing the version Spec of the version to use.  Examples: .nvmrc, .node-version, .tool-versions."
        required: false
        type: string

      registry-url:
        description: "Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN."
        required: false
        type: string

      run-scripts:
        description: "An ordered list of scripts from the package.json file to run (space separated). Example value: 'script1 script2'"
        required: false
        type: string

      scope:
        description: "Optional scope for authenticating against scoped registries. Will fall back to the repository owner when using the GitHub Packages registry (https://npm.pkg.github.com/)."
        required: false
        type: string

      # NOTE: the additional inputs below are to support additional
      # functionality of the workflow.
      rekor-log-public:
        description: "Allow publication of your repository name on the public Rekor log"
        required: false
        type: boolean
        default: false

jobs:
  slsa-setup:
    permissions:
      id-token: write # For token creation.
    outputs:
      slsa-token: ${{ steps.generate.outputs.slsa-token }}
    runs-on: ubuntu-latest
    steps:
      - name: Generate the token
        id: generate
        uses: slsa-framework/slsa-github-generator/actions/delegator/setup-token@main
        with:
          slsa-workflow-recipient: "delegator_generic_slsa3.yml"
          slsa-rekor-log-public: ${{ inputs.rekor-log-public }}
          slsa-runner-label: "ubuntu-latest"
          slsa-build-action-path: "./internal/nodejs-action"
          # TODO(#1575): mask sensitive fields.
          slsa-workflow-inputs: ${{ toJson(inputs) }}

  slsa-run:
    needs: [slsa-setup]
    permissions:
      id-token: write # For signing.
      contents: write # For asset uploads.
      packages: write # For publishing to GitHub packages.
    uses: slsa-framework/slsa-github-generator/.github/workflows/delegator_generic_slsa3.yml@main
    with:
      slsa-token: ${{ needs.slsa-setup.outputs.slsa-token }}

  slsa-publish:
    needs: [slsa-run]
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write # For asset uploads. Optional
    runs-on: ubuntu-latest
    steps:
      - name: Download attestations
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: ${{ needs.slsa-run.outputs.attestations-download-name }}

      - name: Download artifact
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: "package.tgz"

      # TODO(#1680): verify the attestation before upload.
      # - name: Verify attestations
      #   env:
      #     SLSA_ATTESTATION_DOWNLOAD_NAME: ${{ needs.slsa-run.outputs.attestations-download-name }}
      #   run: |
      #     echo "download from $SLSA_ATTESTATION_DOWNLOAD_NAME"

      # TODO(#888): Publish to GitHub release.

      # TODO(#1669): Publish to npm. Note that we need to upload our own bundle to npm.
      # - name: Publish to npm registry
      #   run: |
      #     npm publish # ...
