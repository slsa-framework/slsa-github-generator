name: Lint

on: [pull_request]

permissions:
  # Needed to check out the repo.
  contents: read

jobs:
  golangci-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # v3.0.2
      - uses: actions/setup-go@b22fbbc2921299758641fab08929b4ac52b32923 # v3.2.0
        with:
          go-version: "1.18"
      - env:
          GOLANGCI_LINT_VERSION: "1.46.2"
          # FIXME: restore correct checksum.
          GOLANGCI_LINT_CHECKSUM: "2d79dbcf3e7fb9f9dfc415e706e21dc03f129cacaa464e8be12546a8ba27be55"
          # GOLANGCI_LINT_CHECKSUM: "242cd4f2d6ac0556e315192e8555784d13da5d1874e51304711570769c4f2b9b"
        run: |
          set -euo pipefail

          #Install golangci-lint
          curl -sSLo golangci-lint.tar.gz "https://github.com/golangci/golangci-lint/releases/download/v${GOLANGCI_LINT_VERSION}/golangci-lint-${GOLANGCI_LINT_VERSION}-linux-amd64.tar.gz"
          tar xf golangci-lint.tar.gz
          cd golangci-lint-${GOLANGCI_LINT_VERSION}-linux-amd64
          echo "$GOLANGCI_LINT_CHECKSUM golangci-lint" | sha256sum --strict --check --status || exit -2
          mv golangci-lint /usr/local/bin
          cd ..

          # Run golangci-lint
          golangci-lint run ./... --out-format=github-actions --timeout=5m

  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # v3.0.2
      - env:
          SHELLCHECK_VERSION: "0.8.0"
        run: |
          set -euo pipefail

          # Install shellcheck
          wget -qO- "https://github.com/koalaman/shellcheck/releases/download/v${SHELLCHECK_VERSION}/shellcheck-v${SHELLCHECK_VERSION}.linux.x86_64.tar.xz" | tar -xJf -
          mv "shellcheck-v$SHELLCHECK_VERSION/shellcheck" /usr/local/bin

          # Run shellcheck and output github actions commands.
          # See: https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions
          find . -type f -not -iwholename '*/.git/*' -exec bash -c 'file "$1" | cut -d':' -f2 | grep --quiet shell' _ {} \; -print0 | xargs -0 shellcheck -f json --external-sources | jq -c '.[]' | while IFS="" read -r p || [ -n "$p" ]; do
              LEVEL=$(echo "$p" | jq -c '.level // empty' | tr -d '"')
              FILE=$(echo "$p" | jq -c '.file // empty' | tr -d '"')
              LINE=$(echo "$p" | jq -c '.line // empty' | tr -d '"')
              ENDLINE=$(echo "$p" | jq -c '.endLine // empty' | tr -d '"')
              COL=$(echo "$p" | jq -c '.column // empty' | tr -d '"')
              ENDCOL=$(echo "$p" | jq -c '.endColumn // empty' | tr -d '"')
              MESSAGE=$(echo "$p" | jq -c '.message // empty' | tr -d '"')

              case $LEVEL in
              "info")
                  echo "::notice file=${FILE},line=${LINE},endLine=${ENDLINE},col=${COL},endColumn=${ENDCOL}::${MESSAGE}"
                  ;;
              "warning")
                  echo "::warning file=${FILE},line=${LINE},endLine=${ENDLINE},col=${COL},endColumn=${ENDCOL}::${MESSAGE}"
                  ;;
              "error")
                  echo "::error file=${FILE},line=${LINE},endLine=${ENDLINE},col=${COL},endColumn=${ENDCOL}::${MESSAGE}"
                  ;;
              esac
          done

  yamllint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # v3.0.2
      - env:
          YAMLLINT_VERSION: "1.26.3"
        run: |
          set -euo pipefail

          # Install yamllint
          pip install "yamllint==${YAMLLINT_VERSION}"

          # Run yamllint
          yamllint -f github -c .yamllint.yaml .
