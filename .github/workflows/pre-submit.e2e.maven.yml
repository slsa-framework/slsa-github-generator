# Copyright 2023 SLSA Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: pre-submit e2e maven

on:
  # builder_maven_slsa3.yml relies on .github/actions/verify-token, which does not support merge_group and pull_request events.
  push:
  workflow_dispatch:

permissions: read-all

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    permissions:
      id-token: write # For signing.
      contents: read # For repo checkout of private repos.
      actions: read # For getting workflow run on private repos.
    uses: slsa-framework/slsa-github-generator/.github/workflows/builder_maven_slsa3.yml@main
    with:
      directory: ./e2e/maven/workflow_dispatch

  verify:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: slsa-framework/slsa-github-generator/actions/maven/secure-download-attestations@main
        with:
          name: "${{ needs.build.outputs.provenance-download-name }}"
          sha256: "${{ needs.build.outputs.provenance-download-sha256 }}"
          path: ./
      - uses: slsa-framework/slsa-github-generator/actions/maven/secure-download-target@main
        with:
          name: "${{ needs.build.outputs.target-download-name }}"
          sha256: "${{ needs.build.outputs.target-download-sha256 }}"
          path: ./
      - uses: slsa-framework/slsa-verifier/actions/installer@v2.6.0
      - name: Verify artifact
        env:
          PROVENANCE_PATH: ${{ needs.build.outputs.provenance-download-name }}
          TARGET_PATH: ${{ needs.build.outputs.target-download-name }}
        run: slsa-verifier verify-artifact "$TARGET_PATH" --provenance-path "$PROVENANCE_PATH"
