# Copyright 2023 SLSA Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: SLSA Source archive builder

permissions: {}

on:
  workflow_call:
    inputs:
      formats:
        description: >
          A list of archive formats to generate. Supported: "zip" and "tar.gz".
          Each format must be separated by a space or on a new line.

          Example: "zip tar.gz"
        required: true
        type: string
      upload-assets:
        description: >
          If true, provenance is uploaded to a GitHub release for new tags.
          The only value supported is 'true'. The workflow will fail if set to 'false'.
        required: false
        type: boolean
        default: true
      rekor-log-public:
        description: "Allow publication of your repository name on the public Rekor log"
        required: false
        type: boolean
        default: false

jobs:
  slsa-setup:
    permissions:
      id-token: write # For token creation.
    outputs:
      slsa-token: ${{ steps.generate.outputs.slsa-token }}
    runs-on: ubuntu-latest
    steps:
      - name: Generate the token
        id: generate
        uses: slsa-framework/slsa-github-generator/actions/delegator/setup-generic@main
        with:
          slsa-workflow-recipient: "delegator_generic_slsa3.yml"
          slsa-rekor-log-public: ${{ inputs.rekor-log-public }}
          slsa-runner-label: "ubuntu-latest"
          slsa-build-action-path: "./internal/builders/archive"
          slsa-workflow-inputs: ${{ toJson(inputs) }}

  slsa-run:
    needs: [slsa-setup]
    permissions:
      id-token: write # For signing.
      contents: write # To release assets.
      packages: write # To publish to GitHub packages.
      actions: read # For getting workflow run on private repos.
    uses: slsa-framework/slsa-github-generator/.github/workflows/delegator_generic_slsa3.yml@main
    with:
      slsa-token: ${{ needs.slsa-setup.outputs.slsa-token }}

  # TODO(): upload attestation as release assets using needs.slsa-run.outputs.attestations-download-name and attestations-download-sha256