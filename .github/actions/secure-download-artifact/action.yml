name: "Secure artifact download"
description: "Download an artifact and verify its SHA256"
inputs:
  name:
    description: "Artifact name."
    required: true
  path:
    description: "Destination path."
    required: false
  sha256:
    description: "SHA256 of the file for verification."
    required: true
  set-executable:
    description: "Set the artifact as executable."
    required: false

runs:
  using: "composite"
  steps:
    - name: Download the artifact
      uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741 # v3.0.0
      with:
        name: "${{ inputs.name }}"

    - name: Compute the hash
      id: compute
      uses: slsa-framework/slsa-github-generator/.github/actions/compute-sha256@1b4ebe8029b40670c71aae9b9c88be486beb6b49
      with:
        path: "${{ inputs.name }}"

    - name: Verify the SHA256
      env:
        UNTRUSTED_EXPECTED_HASH: "${{ inputs.sha256 }}"
        UNTRUSTED_COMPUTED_HASH: "${{ steps.compute.outputs.sha256 }}"
        UNTRUSTED_PATH: "${{ inputs.name }}"
        UNTRUSTED_DST_PATH: "${{ inputs.path }}"
        SET_EXECUTABLE: "${{ inputs.set-executable }}"
      shell: bash
      run: |
      
        set -euo pipefail
        if [[ ! -f "$UNTRUSTED_PATH" ]]; then
            echo "File $UNTRUSTED_PATH not present"
            exit 5
        fi
            
        echo "expected hash is $UNTRUSTED_EXPECTED_HASH"
        echo "computed hash is $UNTRUSTED_COMPUTED_HASH"
        if [[ "$UNTRUSTED_COMPUTED_HASH" != "$UNTRUSTED_EXPECTED_HASH" ]]; then
            echo "hashes do not match"
            exit -2
        fi
        echo "hashes match"
        if [[ "$SET_EXECUTABLE" == "true" ]]; then
            echo "Setting $UNTRUSTED_PATH as executable"
            chmod u+x "$UNTRUSTED_PATH"
        fi
        if [[ -n "$UNTRUSTED_DST_PATH" ]]; then
            echo "Moving $UNTRUSTED_PATH to $UNTRUSTED_DST_PATH"
            mv "$UNTRUSTED_PATH" "$UNTRUSTED_DST_PATH"
        fi
